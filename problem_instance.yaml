# Optimization and Decision Making - Challenge 1
# Problem instance configuration

graph:
  nodes:
    - A
    - B
    - C
    - D
    - E
    - F
    - G
    - H
    - I
    - J
    - K
    - L
    - M
    - N

  edges:
    # Format: [node1, node2, cost]
    - [A, B, 6]
    - [A, C, 1]
    - [A, D, 1]
    - [A, E, 2]
    - [A, F, 6]
    - [B, D, 3]
    - [B, G, 1]
    - [B, J, 8]
    - [C, E, 4]
    - [D, E, 1]
    - [D, F, 1]
    - [D, H, 3]
    - [E, F, 3]
    - [E, K, 3]
    - [E, L, 5]
    - [F, G, 2]
    - [F, J, 1]
    - [F, K, 1]
    - [G, H, 2]
    - [G, J, 8]
    - [H, I, 5]
    - [H, M, 9]
    - [I, J, 3]
    - [I, K, 4]
    - [I, L, 2]
    - [I, M, 2]
    - [J, K, 2]
    - [J, L, 1]
    - [K, L, 1]
    - [K, N, 7]
    - [L, M, 1]
    - [L, N, 1]
    - [M, N, 3]

products:
  gemstones:
    profit_per_unit: 30  # euros
    weight_per_unit: 2   # tons
  epoxy:
    profit_per_unit: 10  # euros
    weight_per_unit: 1   # tons
  copper:
    profit_per_unit: 100 # euros
    weight_per_unit: 6   # tons

inventory:
  # Format: node_name: {gemstones: X, epoxy: Y, copper: Z}
  A: {gemstones: 0, epoxy: 0, copper: 0}
  B: {gemstones: 0, epoxy: 1, copper: 1}
  C: {gemstones: 1, epoxy: 2, copper: 0}
  D: {gemstones: 1, epoxy: 0, copper: 0}
  E: {gemstones: 1, epoxy: 0, copper: 2}
  F: {gemstones: 1, epoxy: 0, copper: 0}
  G: {gemstones: 1, epoxy: 3, copper: 2}
  H: {gemstones: 4, epoxy: 1, copper: 0}
  I: {gemstones: 2, epoxy: 0, copper: 1}
  J: {gemstones: 0, epoxy: 0, copper: 3}
  K: {gemstones: 1, epoxy: 1, copper: 3}
  L: {gemstones: 0, epoxy: 0, copper: 2}
  M: {gemstones: 0, epoxy: 3, copper: 0}
  N: {gemstones: 0, epoxy: 0, copper: 0}

constraints:
  warehouse_capacity_tons: 56    # Maximum storage in tons
  truck_capacity_units: 15       # Maximum total units that can be carried
  copper_to_gemstone_ratio: 2    # Copper units ≤ 2 × Gemstone units

routing:
  start_node: A
  end_node: N
